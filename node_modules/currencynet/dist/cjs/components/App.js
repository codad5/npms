"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberShortener = exports.CurrencyConverter = exports.CurrencyNet = void 0;
const tslib_1 = require("tslib");
const react_1 = tslib_1.__importStar(require("react"));
const currencyset_json_1 = tslib_1.__importDefault(require("./currencyset.json"));
const assets_1 = require("./assets");
const Helpers_1 = require("./Helpers");
function CurrencyNet(props) {
    var _a, _b;
    const buildCurrency = assets_1.countryCodes.includes(props.buildCurrency) ? props.buildCurrency : 'USD';
    // const [rate, setRate] = useState(1)
    // const [clientCurrency, setClientCurrency] = useState(props.buildCurrency)
    const [clientDisplay, setClientDisplay] = (0, react_1.useState)({
        currency: props.buildCurrency,
        rate: 1,
        symbol: currencyset_json_1.default[props.buildCurrency].symbol,
        value: props.value,
    });
    // const symbols = currencySet[clientCurrency].symbol
    const value = props.value;
    const isfloat = (_a = props.isfloat) !== null && _a !== void 0 ? _a : true, shortenCurrency = (_b = props.shortenCurrency) !== null && _b !== void 0 ? _b : false;
    try {
        (0, Helpers_1.fetchUserLoactionCurrencyCode)().then((currency) => {
            (0, Helpers_1.getRate)(buildCurrency, clientDisplay.currency).then((rate) => {
                // console.log(rate)
                if (rate && currency) {
                    // setRate(rate)
                    // setClientCurrency(currency)
                    setClientDisplay(() => {
                        return { currency: currency, rate: rate, symbol: currencyset_json_1.default[currency].symbol, value: rate * props.value };
                    });
                }
            });
        });
    }
    catch (error) {
        console.log(error);
    }
    return react_1.default.createElement("span", null, (0, Helpers_1.output_display)(clientDisplay, value, isfloat, shortenCurrency));
}
exports.CurrencyNet = CurrencyNet;
function CurrencyConverter(props) {
    var _a, _b;
    const buildCurrency = assets_1.countryCodes.includes(props.from) ? props.from : 'USD';
    const ClientCurrency = assets_1.countryCodes.includes(props.to) ? props.to : 'USD';
    // const [rate, setRate] = useState(1)
    // const [clientCurrency, setClientCurrency] = useState(props.buildCurrency)
    const [clientDisplay, setClientDisplay] = (0, react_1.useState)({
        currency: props.from,
        rate: 1,
        symbol: currencyset_json_1.default[props.from].symbol,
        value: props.value,
    });
    // const symbols = currencySet[clientCurrency].symbol
    const value = props.value;
    const isfloat = (_a = props.isfloat) !== null && _a !== void 0 ? _a : true, shortenCurrency = (_b = props.shortenCurrency) !== null && _b !== void 0 ? _b : false;
    try {
        // fetchUserLoaction().then((currency) => {
        (0, Helpers_1.getRate)(buildCurrency, props.to).then((rate) => {
            // console.log(rate)
            if (rate && ClientCurrency) {
                // setRate(rate)
                // setClientCurrency(currency)
                setClientDisplay((prev) => {
                    return { currency: props.to, rate: rate, symbol: currencyset_json_1.default[props.to].symbol, value: rate * prev.value };
                });
            }
        });
        // })
    }
    catch (error) {
        console.log(error);
    }
    return react_1.default.createElement("span", null, (0, Helpers_1.output_display)(clientDisplay, value, isfloat, shortenCurrency));
}
exports.CurrencyConverter = CurrencyConverter;
function NumberShortener(props) {
    var _a;
    const value = props.value;
    const precision = (_a = props.precision) !== null && _a !== void 0 ? _a : 2;
    const float = props.isfloat ? precision : 0;
    return react_1.default.createElement("span", null, (0, Helpers_1.shorten_number)(value, float));
}
exports.NumberShortener = NumberShortener;
//# sourceMappingURL=App.js.map