import React, { useState } from 'react';
import currencySet from './currencyset.json';
import { countryCodes } from './assets';
import { fetchUserLoactionCurrencyCode, getRate, output_display, shorten_number } from './Helpers';
export function CurrencyNet(props) {
    var _a, _b;
    const buildCurrency = countryCodes.includes(props.buildCurrency) ? props.buildCurrency : 'USD';
    // const [rate, setRate] = useState(1)
    // const [clientCurrency, setClientCurrency] = useState(props.buildCurrency)
    const [clientDisplay, setClientDisplay] = useState({
        currency: props.buildCurrency,
        rate: 1,
        symbol: currencySet[props.buildCurrency].symbol,
        value: props.value,
    });
    // const symbols = currencySet[clientCurrency].symbol
    const value = props.value;
    const isfloat = (_a = props.isfloat) !== null && _a !== void 0 ? _a : true, shortenCurrency = (_b = props.shortenCurrency) !== null && _b !== void 0 ? _b : false;
    try {
        fetchUserLoactionCurrencyCode().then((currency) => {
            getRate(buildCurrency, clientDisplay.currency).then((rate) => {
                // console.log(rate)
                if (rate && currency) {
                    // setRate(rate)
                    // setClientCurrency(currency)
                    setClientDisplay(() => {
                        return { currency: currency, rate: rate, symbol: currencySet[currency].symbol, value: rate * props.value };
                    });
                }
            });
        });
    }
    catch (error) {
        console.log(error);
    }
    return React.createElement("span", null, output_display(clientDisplay, value, isfloat, shortenCurrency));
}
export function CurrencyConverter(props) {
    var _a, _b;
    const buildCurrency = countryCodes.includes(props.from) ? props.from : 'USD';
    const ClientCurrency = countryCodes.includes(props.to) ? props.to : 'USD';
    // const [rate, setRate] = useState(1)
    // const [clientCurrency, setClientCurrency] = useState(props.buildCurrency)
    const [clientDisplay, setClientDisplay] = useState({
        currency: props.from,
        rate: 1,
        symbol: currencySet[props.from].symbol,
        value: props.value,
    });
    // const symbols = currencySet[clientCurrency].symbol
    const value = props.value;
    const isfloat = (_a = props.isfloat) !== null && _a !== void 0 ? _a : true, shortenCurrency = (_b = props.shortenCurrency) !== null && _b !== void 0 ? _b : false;
    try {
        // fetchUserLoaction().then((currency) => {
        getRate(buildCurrency, props.to).then((rate) => {
            // console.log(rate)
            if (rate && ClientCurrency) {
                // setRate(rate)
                // setClientCurrency(currency)
                setClientDisplay((prev) => {
                    return { currency: props.to, rate: rate, symbol: currencySet[props.to].symbol, value: rate * prev.value };
                });
            }
        });
        // })
    }
    catch (error) {
        console.log(error);
    }
    return React.createElement("span", null, output_display(clientDisplay, value, isfloat, shortenCurrency));
}
export function NumberShortener(props) {
    var _a;
    const value = props.value;
    const precision = (_a = props.precision) !== null && _a !== void 0 ? _a : 2;
    const float = props.isfloat ? precision : 0;
    return React.createElement("span", null, shorten_number(value, float));
}
//# sourceMappingURL=App.js.map